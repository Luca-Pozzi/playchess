<launch>
    <!-- ARGS and PARAMS -->
    <arg name = "rgb_image_topic" default = "/xtion/rgb/image_rect_color/compressed" />
    <arg name = "pointcloud_topic" default = "/xtion/depth_registered/points" />

    <!--
    <arg name = "detection_score_threshold" default = "0.75" />
    <param name = "detection_score_threshold" type = "double" value = "$(arg detection_score_threshold)" /> 
    -->

    <!-- CORE FUNCTIONALITIES -->
    <!-- throttle node that downsamples the image stream --> <!-- is this actually used? -->
    <!--<node pkg = "topic_tools" type = "throttle" name = "camera_throttler" required = "true" args = "messages $(arg rgb_image_topic) 5 $(arg rgb_image_topic)/throttled" />-->
        
    <node pkg = "tiago_playchess" type = "chessboard_pointcloudOLD.py" name = "chessboard_pointcloud" output = "screen">
        <remap from = "/rgb_image" to = "$(arg rgb_image_topic)" />
        <remap from = "/pointcloud" to = "$(arg pointcloud_topic)" />
    </node>

    <!-- Run a nodelet manager -->
    <!--<node pkg="nodelet" type="nodelet" name="object_outlier_removal_manager" args="manager"/>-->

    <!-- Run a statistical outlier removal to clean a pointcloud -->
    <!--
    <node pkg="nodelet" type="nodelet" name="object_outlier_removal" args="load pcl/StatisticalOutlierRemoval object_outlier_removal_manager">
        <remap from="~input" to="/segmentation_result/cloud" />
        <rosparam>
            mean_k: 100
            stddev: 0.1
            negative: false 
        </rosparam>
    </node>
    -->

    <!--<node pkg = "segmentation" type = "SemanticCloud.py" name = "semantic_cloud" />-->
</launch>